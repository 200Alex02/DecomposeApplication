// Generated by Dagger (https://dagger.dev).
package com.example.decompose.data.di;

import android.app.Application;
import com.example.decompose.data.repository.CoinRepositoryImpl;
import com.example.decompose.data.use_case.GetCoinUseCaseByIdImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataModule_ProvideGetCoinUseCaseByIdFactory implements Factory<GetCoinUseCaseByIdImpl> {
  private final Provider<CoinRepositoryImpl> repositoryProvider;

  private final Provider<Application> applicationProvider;

  public DataModule_ProvideGetCoinUseCaseByIdFactory(
      Provider<CoinRepositoryImpl> repositoryProvider, Provider<Application> applicationProvider) {
    this.repositoryProvider = repositoryProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public GetCoinUseCaseByIdImpl get() {
    return provideGetCoinUseCaseById(repositoryProvider.get(), applicationProvider.get());
  }

  public static DataModule_ProvideGetCoinUseCaseByIdFactory create(
      Provider<CoinRepositoryImpl> repositoryProvider, Provider<Application> applicationProvider) {
    return new DataModule_ProvideGetCoinUseCaseByIdFactory(repositoryProvider, applicationProvider);
  }

  public static GetCoinUseCaseByIdImpl provideGetCoinUseCaseById(CoinRepositoryImpl repository,
      Application application) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideGetCoinUseCaseById(repository, application));
  }
}
